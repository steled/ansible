---
# file: local_init.yml
- name: local_init
  hosts: localhost
  vars_files:
    - users.yml

  tasks:
    - name: create local user with predefined ssh key
      user:
        name: "{{ item.name }}"
        password: "*"
        state: "{{ item.state }}"
        force: yes
        remove: yes
        create_home: yes
        shell: "/bin/bash"
        groups: sudo
        append: yes
      with_items:
        - "{{ users }}"
      when:
        - item.key_file is defined or item.key is defined

    - name: create local user and generate ssh key
      user:
        name: "{{ item.name }}"
        password: "*"
        generate_ssh_key: yes
        ssh_key_bits: 4096
        ssh_key_file: "/home/{{ item.name }}/.ssh/{{ item.name }}.id_rsa"
        ssh_key_comment: "{{ item.name }}"
        ssh_key_type: rsa
        state: "{{ item.state }}"
        force: yes
        remove: yes
        create_home: yes
        shell: "/bin/bash"
        groups: sudo
        append: yes
      with_items:
        - "{{ users }}"
      when:
        - item.key_file is undefined and item.key is undefined

    - name: add local user to the sudoers
      copy:
        content: "{{ item.name }}  ALL=(ALL)  NOPASSWD: ALL"
        dest: "/etc/sudoers.d/{{ item.name }}"
      with_items:
        - "{{ users }}"
      when:
        - item.state == "present"

    - name: remove local user from the sudoers
      file:
        path: "/etc/sudoers.d/{{ item.name }}"
        state: absent
      with_items:
        - "{{ users }}"
      when:
        - item.state == "absent"

    - name: add ssh key_file
      authorized_key:
        user: "{{ item.name }}"
        key: "{{ lookup('file', '{{ item.key_file }}') }}"
        manage_dir: yes
        state: "{{ item.state }}"
      with_items:
        - "{{ users }}"
      when:
        - item.state == "present" and item.key_file is defined

    - name: add ssh key
      authorized_key:
        user: "{{ item.name }}"
        key: "{{ item.key }}"
        manage_dir: yes
        state: "{{ item.state }}"
      with_items:
        - "{{ users }}"
      when:
        - item.state == "present" and item.key is defined